{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Files\\\\HackAI2\\\\hackai-project-2025\\\\src\\\\ChatUI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatUI() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const res = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        role: \"bot\",\n        text: data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      const errorMsg = {\n        role: \"bot\",\n        text: \"❌ Failed to connect to chatbot.\"\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    }\n    setInput(\"\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chatBox,\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          ...styles.message,\n          ...(msg.role === \"user\" ? styles.userMessage : styles.botMessage)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          style: styles.sender,\n          children: msg.role === \"user\" ? \"You\" : \"Bot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.inputContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        onKeyDown: handleKeyPress,\n        placeholder: \"Type a message...\",\n        style: styles.input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        style: styles.button,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatUI, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatUI;\nconst styles = {\n  container: {\n    maxWidth: \"600px\",\n    margin: \"auto\",\n    padding: \"20px\",\n    fontFamily: \"Arial, sans-serif\",\n    backgroundColor: \"#fef9f4\",\n    minHeight: \"100vh\"\n  },\n  chatBox: {\n    border: \"1px solid #ddd\",\n    borderRadius: \"10px\",\n    padding: \"10px\",\n    height: \"400px\",\n    overflowY: \"auto\",\n    backgroundColor: \"#ffffff\",\n    marginBottom: \"10px\",\n    boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.05)\"\n  },\n  message: {\n    marginBottom: \"10px\",\n    padding: \"10px\",\n    borderRadius: \"10px\",\n    maxWidth: \"80%\",\n    lineHeight: \"1.4\"\n  },\n  userMessage: {\n    backgroundColor: \"#cde7ff\",\n    alignSelf: \"flex-end\",\n    marginLeft: \"auto\",\n    textAlign: \"right\"\n  },\n  botMessage: {\n    backgroundColor: \"#e5e5e5\",\n    alignSelf: \"flex-start\",\n    marginRight: \"auto\",\n    textAlign: \"left\"\n  },\n  sender: {\n    fontSize: \"0.75em\",\n    fontWeight: \"bold\",\n    marginBottom: \"5px\",\n    display: \"block\",\n    color: \"#555\"\n  },\n  inputContainer: {\n    display: \"flex\",\n    gap: \"10px\"\n  },\n  input: {\n    flex: 1,\n    padding: \"10px\",\n    fontSize: \"1em\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\"\n  },\n  button: {\n    padding: \"10px 20px\",\n    fontSize: \"1em\",\n    borderRadius: \"8px\",\n    border: \"none\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    cursor: \"pointer\"\n  }\n};\nexport default ChatUI;\nvar _c;\n$RefreshReg$(_c, \"ChatUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatUI","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","role","text","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","err","console","error","errorMsg","handleKeyPress","e","key","style","styles","container","children","chatBox","map","msg","idx","sender","fileName","_jsxFileName","lineNumber","columnNumber","inputContainer","type","value","onChange","target","onKeyDown","placeholder","onClick","button","_c","maxWidth","margin","padding","fontFamily","backgroundColor","minHeight","border","borderRadius","height","overflowY","marginBottom","boxShadow","lineHeight","alignSelf","marginLeft","textAlign","marginRight","fontSize","fontWeight","display","color","gap","flex","cursor","$RefreshReg$"],"sources":["C:/Coding Files/HackAI2/hackai-project-2025/src/ChatUI.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChatUI() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { role: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botMessage = { role: \"bot\", text: data.reply };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      const errorMsg = { role: \"bot\", text: \"❌ Failed to connect to chatbot.\" };\r\n      setMessages((prev) => [...prev, errorMsg]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <div style={styles.chatBox}>\r\n        {messages.map((msg, idx) => (\r\n          <div\r\n            key={idx}\r\n            style={{\r\n              ...styles.message,\r\n              ...(msg.role === \"user\" ? styles.userMessage : styles.botMessage),\r\n            }}\r\n          >\r\n            <span style={styles.sender}>\r\n              {msg.role === \"user\" ? \"You\" : \"Bot\"}\r\n            </span>\r\n            <div>{msg.text}</div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div style={styles.inputContainer}>\r\n        <input\r\n          type=\"text\"\r\n          value={input}\r\n          onChange={(e) => setInput(e.target.value)}\r\n          onKeyDown={handleKeyPress}\r\n          placeholder=\"Type a message...\"\r\n          style={styles.input}\r\n        />\r\n        <button onClick={sendMessage} style={styles.button}>Send</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"600px\",\r\n    margin: \"auto\",\r\n    padding: \"20px\",\r\n    fontFamily: \"Arial, sans-serif\",\r\n    backgroundColor: \"#fef9f4\",\r\n    minHeight: \"100vh\",\r\n  },\r\n  chatBox: {\r\n    border: \"1px solid #ddd\",\r\n    borderRadius: \"10px\",\r\n    padding: \"10px\",\r\n    height: \"400px\",\r\n    overflowY: \"auto\",\r\n    backgroundColor: \"#ffffff\",\r\n    marginBottom: \"10px\",\r\n    boxShadow: \"0 2px 10px rgba(0, 0, 0, 0.05)\",\r\n  },\r\n  message: {\r\n    marginBottom: \"10px\",\r\n    padding: \"10px\",\r\n    borderRadius: \"10px\",\r\n    maxWidth: \"80%\",\r\n    lineHeight: \"1.4\",\r\n  },\r\n  userMessage: {\r\n    backgroundColor: \"#cde7ff\",\r\n    alignSelf: \"flex-end\",\r\n    marginLeft: \"auto\",\r\n    textAlign: \"right\",\r\n\r\n  },\r\n  botMessage: {\r\n    backgroundColor: \"#e5e5e5\",\r\n    alignSelf: \"flex-start\",\r\n    marginRight: \"auto\",\r\n    textAlign: \"left\",\r\n  },\r\n  sender: {\r\n    fontSize: \"0.75em\",\r\n    fontWeight: \"bold\",\r\n    marginBottom: \"5px\",\r\n    display: \"block\",\r\n    color: \"#555\",\r\n  },\r\n  inputContainer: {\r\n    display: \"flex\",\r\n    gap: \"10px\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: \"10px\",\r\n    fontSize: \"1em\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid #ccc\",\r\n  },\r\n  button: {\r\n    padding: \"10px 20px\",\r\n    fontSize: \"1em\",\r\n    borderRadius: \"8px\",\r\n    border: \"none\",\r\n    backgroundColor: \"#007bff\",\r\n    color: \"#fff\",\r\n    cursor: \"pointer\",\r\n  },\r\n};\r\n\r\nexport default ChatUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}