{"ast":null,"code":"var _jsxFileName = \"C:\\\\Coding Files\\\\HackAI2\\\\hackai-project-2025\\\\src\\\\ChatUI.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatUI() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      role: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const res = await fetch(\"http://localhost:5000/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        role: \"bot\",\n        text: data.reply\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      console.error(\"Error:\", err);\n      const errorMsg = {\n        role: \"bot\",\n        text: \"❌ Failed to connect to chatbot.\"\n      };\n      setMessages(prev => [...prev, errorMsg]);\n    }\n    setInput(\"\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") sendMessage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"1px solid #ccc\",\n        padding: 10,\n        height: 300,\n        overflowY: \"scroll\",\n        marginBottom: 10\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: msg.role === \"user\" ? \"right\" : \"left\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role === \"user\" ? \"You\" : \"Bot\", \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      onKeyDown: handleKeyPress,\n      placeholder: \"Type a message...\",\n      style: {\n        width: \"80%\",\n        padding: \"10px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        padding: \"10px\",\n        marginLeft: \"10px\"\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatUI, \"bxrUXnlHDt+zalfpk8IFX5tJV48=\");\n_c = ChatUI;\nexport default ChatUI;\nvar _c;\n$RefreshReg$(_c, \"ChatUI\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatUI","_s","messages","setMessages","input","setInput","sendMessage","trim","userMessage","role","text","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","reply","err","console","error","errorMsg","handleKeyPress","e","key","children","style","border","padding","height","overflowY","marginBottom","map","msg","idx","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","onKeyDown","placeholder","width","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Coding Files/HackAI2/hackai-project-2025/src/ChatUI.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction ChatUI() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const sendMessage = async () => {\r\n    if (!input.trim()) return;\r\n\r\n    const userMessage = { role: \"user\", text: input };\r\n    setMessages((prev) => [...prev, userMessage]);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/chat\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ message: input }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      const botMessage = { role: \"bot\", text: data.reply };\r\n      setMessages((prev) => [...prev, botMessage]);\r\n    } catch (err) {\r\n      console.error(\"Error:\", err);\r\n      const errorMsg = { role: \"bot\", text: \"❌ Failed to connect to chatbot.\" };\r\n      setMessages((prev) => [...prev, errorMsg]);\r\n    }\r\n\r\n    setInput(\"\");\r\n  };\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === \"Enter\") sendMessage();\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div style={{ border: \"1px solid #ccc\", padding: 10, height: 300, overflowY: \"scroll\", marginBottom: 10 }}>\r\n        {messages.map((msg, idx) => (\r\n          <div key={idx} style={{ textAlign: msg.role === \"user\" ? \"right\" : \"left\" }}>\r\n            <strong>{msg.role === \"user\" ? \"You\" : \"Bot\"}:</strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        type=\"text\"\r\n        value={input}\r\n        onChange={(e) => setInput(e.target.value)}\r\n        onKeyDown={handleKeyPress}\r\n        placeholder=\"Type a message...\"\r\n        style={{ width: \"80%\", padding: \"10px\" }}\r\n      />\r\n      <button onClick={sendMessage} style={{ padding: \"10px\", marginLeft: \"10px\" }}>\r\n        Send\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatUI;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}